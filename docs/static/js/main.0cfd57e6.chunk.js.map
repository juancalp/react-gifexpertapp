{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","fixed_height","GifGridItem","className","src","alt","GifGrid","setImages","useEffect","then","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,QAAU,IAE5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOd,2CACA,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,aAAaZ,QATnB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EAETd,mBAAS,IAFA,mBAE9B2B,EAF8B,KAEtBO,EAFsB,KAWrC,OAPAC,qBAAU,WACNtB,EAAQC,GACHsB,KAAKF,KACX,CAACpB,IAKA,oCACI,4BAAKA,GACL,yBAAKgB,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIa,IAAKb,EAAIC,IACLD,UCnBnBc,EAAe,WAAO,IAAD,EACMtC,mBAAS,CAAC,cADhB,mBACvBuC,EADuB,KACXxC,EADW,KAG9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQwC,EAAWhB,KAAI,SAAAT,GAAQ,OAEf,kBAAC,EAAD,CACIuB,IAAKvB,EACLA,SAAUA,U,MCZ1C0B,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.0cfd57e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length >= 1) {\r\n\r\n            setCategories(cate => [inputValue, ...cate]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <h2>AddCategory</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n\r\n            >\r\n\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=2ignsh9l231ZrpR2dNCE9LNFi6d45moU`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gift = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.fixed_height.url\r\n        }\r\n    })\r\n\r\n    return gift;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const [images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(setImages);\r\n    }, [category])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h3>GifExpertApp</h3>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        (\r\n                            <GifGrid\r\n                                key={category}\r\n                                category={category}\r\n                            />\r\n                        ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}